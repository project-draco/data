org.gradle.api.plugins.antlr.internal.AntlrSpecFactory.create(org.gradle.api.plugins.antlr.AntlrTask, java.util.Set<java.io.File>, org.gradle.api.file.SourceDirectorySet);AntlrTask
org.gradle.api.plugins.antlr.AntlrTask.evaluate(org.gradle.api.plugins.antlr.internal.AntlrResult);AntlrResult
org.gradle.api.plugins.antlr.internal.AntlrWorkerManager.createWorkerProcess(java.io.File, org.gradle.process.internal.worker.WorkerProcessFactory, org.gradle.api.file.FileCollection, org.gradle.api.plugins.antlr.internal.AntlrSpec);AntlrSpec
org.gradle.api.plugins.antlr.internal.AntlrExecuter.AntlrTool.doProcess(org.gradle.api.plugins.antlr.internal.AntlrSpec);AntlrSpec
org.gradle.api.plugins.jetty.JettyPlugin.configureAbstractJettyTask(org.gradle.api.Project, org.gradle.api.plugins.jetty.JettyPluginConvention, org.gradle.api.plugins.jetty.AbstractJettyRunTask);AbstractJettyRunTask
org.gradle.api.plugins.jetty.JettyPlugin.configureAbstractJettyTask(org.gradle.api.Project, org.gradle.api.plugins.jetty.JettyPluginConvention, org.gradle.api.plugins.jetty.AbstractJettyRunTask);JettyPluginConvention
org.gradle.api.plugins.jetty.JettyPlugin.configureJettyStop(org.gradle.api.Project, org.gradle.api.plugins.jetty.JettyPluginConvention);JettyPluginConvention
org.gradle.api.internal.tasks.compile.incremental.ClassChangeProcessor.update(org.gradle.api.tasks.incremental.InputFileDetails, org.gradle.api.internal.tasks.compile.incremental.recomp.RecompilationSpec, java.lang.String, java.util.Set<java.lang.Integer>);RecompilationSpec
org.gradle.api.internal.tasks.compile.incremental.jar.PreviousCompilation.getDependents(java.lang.String, java.util.Set<java.lang.Integer>);ClassSetAnalysis
org.gradle.api.internal.tasks.compile.incremental.jar.JarChangeDependentsFinder.getActualDependents(org.gradle.api.tasks.incremental.InputFileDetails, org.gradle.api.internal.tasks.compile.incremental.jar.JarArchive);JarClasspathSnapshot
org.gradle.language.rc.plugins.internal.WindowsResourcesCompileTaskConfig.configureResourceCompileTask(org.gradle.language.rc.tasks.WindowsResourceCompile, org.gradle.nativeplatform.internal.NativeBinarySpecInternal, org.gradle.language.rc.WindowsResourceSet);WindowsResourceCompile
org.gradle.language.assembler.plugins.internal.AssembleTaskConfig.configureAssembleTask(org.gradle.language.assembler.tasks.Assemble, org.gradle.nativeplatform.internal.NativeBinarySpecInternal, org.gradle.language.base.internal.LanguageSourceSetInternal);Assemble
org.gradle.language.nativeplatform.internal.incremental.DefaultSourceIncludesResolver.searchForDependency(java.util.List<java.io.File>, java.lang.String, org.gradle.language.nativeplatform.internal.incremental.DefaultSourceIncludesResolver.BuildableResolvedSourceIncludes);BuildableResolvedSourceIncludes
org.gradle.language.nativeplatform.internal.incremental.IncrementalCompileProcessor.IncrementalCompileFiles.sameHash(org.gradle.language.nativeplatform.internal.incremental.CompilationFileState, com.google.common.hash.HashCode);CompilationFileState
org.gradle.language.nativeplatform.internal.incremental.IncrementalCompileProcessor.IncrementalCompileFiles.sameResolved(org.gradle.language.nativeplatform.internal.incremental.CompilationFileState, org.gradle.language.nativeplatform.internal.incremental.CompilationFileState);CompilationFileState
org.gradle.language.nativeplatform.internal.incremental.IncrementalNativeCompiler.mapIncludes(java.util.Collection<java.io.File>, org.gradle.language.nativeplatform.internal.incremental.CompilationState);CompilationState
org.gradle.language.nativeplatform.internal.incremental.IncrementalNativeCompiler.sourceFilesUseMacroIncludes(java.util.Collection<java.io.File>, org.gradle.language.nativeplatform.internal.incremental.CompilationState);CompilationState
org.gradle.language.nativeplatform.internal.CompileTaskConfig.configureCompileTaskCommon(org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask, org.gradle.nativeplatform.internal.NativeBinarySpecInternal, org.gradle.language.base.internal.LanguageSourceSetInternal);AbstractNativeCompileTask
org.gradle.launcher.cli.BuildActionsFactory.createBuildActionParamters(org.gradle.StartParameter, org.gradle.launcher.daemon.configuration.DaemonParameters);DaemonParameters
org.gradle.launcher.daemon.configuration.DaemonParameters.getEffectiveSystemProperties();DaemonJvmOptions
org.gradle.launcher.daemon.configuration.BuildProcess.configureForBuild(org.gradle.launcher.daemon.configuration.DaemonParameters);DaemonParameters
org.gradle.api.publication.maven.internal.action.MavenDeployAction.createRepository(org.apache.maven.artifact.ant.RemoteRepository);RemoteRepository
org.gradle.api.publication.maven.internal.pom.DefaultPomDependenciesConverter.useScope(org.gradle.api.artifacts.maven.Conf2ScopeMappingContainer, org.gradle.api.artifacts.maven.Conf2ScopeMapping);Conf2ScopeMapping
org.gradle.api.publish.maven.internal.publisher.ValidatingMavenPublisher.checkNotDuplicate(org.gradle.api.publish.maven.internal.publisher.MavenNormalizedPublication, java.util.Set<org.gradle.api.publish.maven.MavenArtifact>, java.lang.String, java.lang.String);MavenNormalizedPublication
org.gradle.api.publish.maven.internal.publisher.ValidatingMavenPublisher.field(org.gradle.api.publish.maven.internal.publisher.MavenNormalizedPublication, java.lang.String, java.lang.String);MavenNormalizedPublication
org.gradle.model.internal.registry.DefaultModelRegistry.TryBindInputs.maybeBind(org.gradle.model.internal.registry.ModelBinding, java.util.Collection<org.gradle.model.internal.registry.DefaultModelRegistry.ModelGoal>);ModelBinding
org.gradle.model.internal.inspect.ModelRuleExtractor.DefaultExtractedRuleSource.mapInputs(java.util.List<org.gradle.model.internal.core.ModelReference<?>>, org.gradle.model.internal.core.ModelPath);ModelPath
org.gradle.model.internal.inspect.StructNodeInitializer.addLink(org.gradle.model.internal.core.MutableModelNode, org.gradle.model.internal.core.ModelRegistrations.Builder, boolean);Builder
org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractor.pushUnsatisfiedDependencies(java.lang.Iterable<? extends org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractionContext<?>>, java.util.Queue<org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractionContext<?>>, org.gradle.model.internal.manage.schema.cache.ModelSchemaCache);ModelSchemaCache
org.gradle.model.internal.manage.schema.extract.StructSchemaExtractionStrategySupport.getNonPropertyMethods(org.gradle.model.internal.manage.schema.extract.CandidateMethods, java.util.List<org.gradle.model.internal.manage.schema.extract.ModelPropertyExtractionResult<?>>);CandidateMethods
org.gradle.model.internal.manage.schema.extract.StructSchemaExtractionStrategySupport.selectProperties(org.gradle.model.internal.manage.schema.extract.ModelSchemaExtractionContext<?>, org.gradle.model.internal.manage.schema.extract.CandidateMethods);CandidateMethods
org.gradle.model.internal.registry.ModelGraph.maybeNotify(org.gradle.model.internal.registry.ModelNodeInternal, org.gradle.model.internal.registry.ModelListener);ModelNodeInternal
org.gradle.model.internal.registry.ModelGraph.maybeNotify(org.gradle.model.internal.registry.ModelNodeInternal, org.gradle.model.internal.registry.ModelListener);ModelListener
org.gradle.model.internal.type.ParameterizedTypeWrapper.hashCode(org.gradle.model.internal.type.TypeWrapper[], org.gradle.model.internal.type.ClassTypeWrapper, org.gradle.model.internal.type.TypeWrapper);ClassTypeWrapper
org.gradle.model.internal.registry.UnboundRulesProcessor.toInputBuilder(org.gradle.model.internal.registry.ModelBinding);ModelBinding
org.gradle.model.internal.registry.DefaultModelRegistry.TryBindInputs.maybeBind(org.gradle.model.internal.registry.ModelBinding, java.util.Collection<org.gradle.model.internal.registry.DefaultModelRegistry.ModelGoal>);ModelBinding
org.gradle.model.internal.inspect.ModelRuleExtractor.DefaultExtractedRuleSource.mapInputs(java.util.List<org.gradle.model.internal.core.ModelReference<?>>, org.gradle.model.internal.core.ModelPath);ModelPath
org.gradle.model.internal.inspect.StructNodeInitializer.addLink(org.gradle.model.internal.core.MutableModelNode, org.gradle.model.internal.core.ModelRegistrations.Builder, boolean);Builder
org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractor.pushUnsatisfiedDependencies(java.lang.Iterable<? extends org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractionContext<?>>, java.util.Queue<org.gradle.model.internal.manage.schema.extract.DefaultModelSchemaExtractionContext<?>>, org.gradle.model.internal.manage.schema.cache.ModelSchemaCache);ModelSchemaCache
org.gradle.model.internal.manage.schema.extract.StructSchemaExtractionStrategySupport.getNonPropertyMethods(org.gradle.model.internal.manage.schema.extract.CandidateMethods, java.util.List<org.gradle.model.internal.manage.schema.extract.ModelPropertyExtractionResult<?>>);CandidateMethods
org.gradle.model.internal.manage.schema.extract.StructSchemaExtractionStrategySupport.selectProperties(org.gradle.model.internal.manage.schema.extract.ModelSchemaExtractionContext<?>, org.gradle.model.internal.manage.schema.extract.CandidateMethods);CandidateMethods
org.gradle.model.internal.registry.ModelGraph.maybeNotify(org.gradle.model.internal.registry.ModelNodeInternal, org.gradle.model.internal.registry.ModelListener);ModelNodeInternal
org.gradle.model.internal.registry.ModelGraph.maybeNotify(org.gradle.model.internal.registry.ModelNodeInternal, org.gradle.model.internal.registry.ModelListener);ModelListener
org.gradle.model.internal.type.ParameterizedTypeWrapper.hashCode(org.gradle.model.internal.type.TypeWrapper[], org.gradle.model.internal.type.ClassTypeWrapper, org.gradle.model.internal.type.TypeWrapper);ClassTypeWrapper
org.gradle.model.internal.registry.UnboundRulesProcessor.toInputBuilder(org.gradle.model.internal.registry.ModelBinding);ModelBinding
org.gradle.language.base.plugins.ComponentModelBasePlugin.PluginRules.inputRules(org.gradle.language.base.plugins.ComponentModelBasePlugin.PluginRules.AttachInputs, org.gradle.platform.base.GeneralComponentSpec);AttachInputs
org.gradle.api.java.archives.internal.DefaultManifestMergeSpec.addMergeDetailToManifest(java.lang.String, org.gradle.api.java.archives.internal.DefaultManifest, org.gradle.api.java.archives.internal.DefaultManifestMergeDetails);DefaultManifestMergeDetails
org.gradle.jvm.plugins.JvmComponentPlugin.Rules.javaToolChains(org.gradle.model.ModelMap<org.gradle.jvm.toolchain.internal.LocalJavaInstallation>, org.gradle.jvm.toolchain.internal.JavaInstallationProbe);JavaInstallationProbe
org.gradle.plugin.devel.plugins.IvyPluginPublishingRules.addMarkerPublications(org.gradle.api.publish.PublishingExtension, org.gradle.plugin.devel.GradlePluginDevelopmentExtension);GradlePluginDevelopmentExtension
org.gradle.plugin.devel.plugins.IvyPluginPublishingRules.createIvyMarkerPublication(org.gradle.plugin.devel.PluginDeclaration, org.gradle.api.publish.ivy.IvyPublication, org.gradle.api.publish.PublicationContainer);PluginDeclaration
org.gradle.plugin.devel.plugins.MavenPluginPublishingRules.addMarkerPublications(org.gradle.api.publish.PublishingExtension, org.gradle.plugin.devel.GradlePluginDevelopmentExtension);GradlePluginDevelopmentExtension
org.gradle.plugin.devel.plugins.MavenPluginPublishingRules.createMavenMarkerPublication(org.gradle.plugin.devel.PluginDeclaration, org.gradle.api.publish.maven.MavenPublication, org.gradle.api.publish.PublicationContainer);PluginDeclaration
org.gradle.api.plugins.buildcomparison.gradle.internal.GradleBuildComparison.createProjectConnection(org.gradle.api.plugins.buildcomparison.gradle.internal.ComparableGradleBuildExecuter);ComparableGradleBuildExecuter
org.gradle.plugin.devel.plugins.IvyPluginPublishingRules.addMarkerPublications(org.gradle.api.publish.PublishingExtension, org.gradle.plugin.devel.GradlePluginDevelopmentExtension);GradlePluginDevelopmentExtension
org.gradle.plugin.devel.plugins.IvyPluginPublishingRules.createIvyMarkerPublication(org.gradle.plugin.devel.PluginDeclaration, org.gradle.api.publish.ivy.IvyPublication, org.gradle.api.publish.PublicationContainer);PluginDeclaration
org.gradle.plugin.devel.plugins.MavenPluginPublishingRules.addMarkerPublications(org.gradle.api.publish.PublishingExtension, org.gradle.plugin.devel.GradlePluginDevelopmentExtension);GradlePluginDevelopmentExtension
org.gradle.plugin.devel.plugins.MavenPluginPublishingRules.createMavenMarkerPublication(org.gradle.plugin.devel.PluginDeclaration, org.gradle.api.publish.maven.MavenPublication, org.gradle.api.publish.PublicationContainer);PluginDeclaration
org.gradle.plugin.use.resolve.service.internal.HttpPluginResolutionServiceClient.validate(java.lang.String, org.gradle.plugin.use.resolve.service.internal.PluginUseMetaData);PluginUseMetaData
org.gradle.plugin.use.resolve.service.internal.HttpPluginResolutionServiceClient.validate(java.lang.String, org.gradle.plugin.use.resolve.service.internal.ErrorResponse);ErrorResponse
org.gradle.plugin.use.resolve.service.internal.PluginResolutionServiceResolver.handleLegacy(org.gradle.plugin.use.resolve.service.internal.PluginUseMetaData, org.gradle.plugin.use.resolve.internal.PluginResolutionResult);PluginUseMetaData
org.gradle.internal.resource.transport.aws.s3.S3Client.createConnectionProperties();S3ConnectionProperties
org.gradle.internal.resource.transport.sftp.SftpClientFactory.SftpClientCreator.createNewClient(org.gradle.internal.resource.transport.sftp.SftpHost);SftpHost
org.gradle.plugins.signing.SigningExtension.addSignaturesToConfiguration(org.gradle.plugins.signing.Sign, org.gradle.api.artifacts.Configuration);Sign
org.gradle.api.internal.tasks.testing.junit.result.TestResultSerializer.write(org.gradle.api.internal.tasks.testing.junit.result.TestMethodResult, org.gradle.internal.serialize.Encoder);TestMethodResult
org.gradle.api.internal.tasks.testing.junit.result.Binary2JUnitXmlReportGenerator.getReportFileName(org.gradle.api.internal.tasks.testing.junit.result.TestClassResult);TestClassResult
org.gradle.api.internal.tasks.testing.junit.result.TestResultSerializer.write(org.gradle.api.internal.tasks.testing.junit.result.TestClassResult, org.gradle.internal.serialize.Encoder);TestClassResult
org.gradle.api.internal.tasks.testing.detection.AbstractTestFrameworkDetector.publishTestClass(boolean, org.gradle.api.internal.tasks.testing.detection.TestClassVisitor, boolean);TestClassVisitor
org.gradle.testkit.runner.internal.DefaultGradleRunner.createBuildResult(org.gradle.testkit.runner.internal.GradleExecutionResult);GradleExecutionResult
org.gradle.tooling.internal.consumer.DefaultGradleConnector.daemonMaxIdleTime(int, java.util.concurrent.TimeUnit);Builder
org.gradle.gradleplugin.foundation.favorites.FavoritesEditor.validateEditableFavoriteTask(org.gradle.gradleplugin.foundation.favorites.FavoritesEditor.EditibleFavoriteTask, org.gradle.gradleplugin.foundation.favorites.FavoriteTask, org.gradle.gradleplugin.foundation.favorites.FavoritesEditor.ValidationInteraction);EditibleFavoriteTask
org.gradle.gradleplugin.foundation.favorites.FavoritesEditor.editInternal(org.gradle.gradleplugin.foundation.favorites.FavoriteTask, org.gradle.gradleplugin.foundation.favorites.FavoritesEditor.EditFavoriteInteraction);FavoriteTask
org.gradle.gradleplugin.foundation.search.TextBlockSearchEditor.searchAllText(java.lang.String, org.gradle.gradleplugin.foundation.search.BasicTextSearchCriteria);BasicTextSearchCriteria
org.gradle.gradleplugin.userinterface.swing.generic.OutputPanel.goToNextLink();OutputTextPane
org.gradle.gradleplugin.userinterface.swing.generic.OutputPanel.goToPreviousLink();OutputTextPane
org.gradle.gradleplugin.userinterface.swing.generic.filter.AbstractFilterEditorPanel.determineShowHideEnabledState(org.gradle.gradleplugin.userinterface.swing.generic.filter.AbstractFilterEditorPanel.StateHolder, java.util.List<java.lang.String>);StateHolder
org.gradle.process.internal.daemon.WorkerDaemonExpiration.SimpleMemoryExpirationSelector.getMemoryUsage(org.gradle.process.internal.daemon.WorkerDaemonClient);WorkerDaemonClient
org.gradle.composite.internal.IncludedBuildArtifactBuilder.getBuildIdentifier(org.gradle.composite.internal.CompositeProjectComponentArtifactMetadata);CompositeProjectComponentArtifactMetadata
org.gradle.api.internal.artifacts.ivyservice.publisher.IvyXmlModuleDescriptorWriter.printConfiguration(org.gradle.internal.component.external.descriptor.Configuration, org.gradle.internal.xml.SimpleXmlWriter);Configuration
org.gradle.api.internal.artifacts.ivyservice.ivyresolve.ComponentSelectionRulesProcessor.getInputValues(java.util.List<java.lang.Class<?>>, org.gradle.api.internal.artifacts.ivyservice.ivyresolve.MetadataProvider);MetadataProvider
org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder.assembleResult(org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder.ResolveState, org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphVisitor);ResolveState
org.gradle.api.internal.artifacts.ivyservice.ivyresolve.DefaultVersionedComponentChooser.versionMatches(org.gradle.api.internal.artifacts.ivyservice.ivyresolve.strategy.VersionSelector, org.gradle.api.internal.artifacts.ivyservice.ivyresolve.ModuleComponentResolveState, org.gradle.api.internal.artifacts.ivyservice.ivyresolve.MetadataProvider);MetadataProvider
org.gradle.api.internal.artifacts.ivyservice.modulecache.ModuleMetadataStore.getFilePath(org.gradle.api.internal.artifacts.ivyservice.modulecache.ModuleComponentAtRepositoryKey);ModuleComponentAtRepositoryKey
org.gradle.api.internal.artifacts.repositories.resolver.MavenResolver.composeSnapshotIdentifier(org.gradle.api.artifacts.component.ModuleComponentIdentifier, org.gradle.api.internal.artifacts.repositories.resolver.MavenUniqueSnapshotModuleSource);MavenUniqueSnapshotModuleSource
org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder.traverseGraph(org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyGraphBuilder.ResolveState, org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.conflicts.ConflictHandler);ResolveState
org.gradle.api.internal.artifacts.ivyservice.modulecache.DefaultModuleArtifactsCache.createCacheArtifacts(org.gradle.api.internal.artifacts.ivyservice.modulecache.DefaultModuleArtifactsCache.ModuleArtifactsCacheEntry);ModuleArtifactsCacheEntry
org.gradle.api.internal.artifacts.ivyservice.ivyresolve.parser.GradlePomModuleDescriptorParser.overrideDependencyMgtsWithImported(org.gradle.api.internal.artifacts.ivyservice.ivyresolve.parser.DescriptorParseContext, org.gradle.api.internal.artifacts.ivyservice.ivyresolve.parser.PomReader);PomReader
org.gradle.plugins.ear.EarPlugin.wireEarTaskConventions(org.gradle.api.Project, org.gradle.plugins.ear.EarPluginConvention);EarPluginConvention
org.gradle.plugins.ear.EarPlugin.configureWithNoJavaPluginApplied(org.gradle.api.Project, org.gradle.plugins.ear.EarPluginConvention);EarPluginConvention
org.gradle.plugins.ear.EarPlugin.configureWithJavaPluginApplied(org.gradle.api.Project, org.gradle.plugins.ear.EarPluginConvention, org.gradle.api.plugins.PluginContainer);EarPluginConvention
org.gradle.plugins.ide.eclipse.model.internal.WtpComponentFactory.getEntriesFromSourceDirs(org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent);EclipseWtpComponent
org.gradle.plugins.ide.eclipse.model.internal.ClassFoldersCreator.create(org.gradle.plugins.ide.eclipse.model.EclipseClasspath);EclipseClasspath
org.gradle.plugins.ide.eclipse.EclipseWtpPlugin.maybeAddTask(org.gradle.api.Project, org.gradle.plugins.ide.internal.IdePlugin, java.lang.String, java.lang.Class<T>, org.gradle.api.Action<T>);IdePlugin
org.gradle.plugins.ide.eclipse.model.internal.WtpComponentFactory.createWbDependentModuleEntry(java.io.File, org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory, java.lang.String);FileReferenceFactory
org.gradle.plugins.ide.idea.model.internal.IdeaDependenciesProvider.getPlusMinusConfigurations(org.gradle.plugins.ide.idea.model.IdeaModule, org.gradle.plugins.ide.idea.model.internal.GeneratedIdeaScope);IdeaModule
org.gradle.plugins.ide.idea.model.internal.IdeaDependenciesProvider.toLibraryDependency(org.gradle.plugins.ide.internal.resolver.model.IdeExtendedRepoFileDependency, org.gradle.plugins.ide.idea.model.IdeaModule, org.gradle.plugins.ide.idea.model.internal.GeneratedIdeaScope);IdeExtendedRepoFileDependency
org.gradle.plugins.ide.internal.tooling.IdeaModelBuilder.buildDependencies(java.util.Map<java.lang.String,org.gradle.plugins.ide.internal.tooling.idea.DefaultIdeaModule>, org.gradle.plugins.ide.idea.model.IdeaModule);IdeaModule
org.gradle.plugins.ide.eclipse.model.Classpath.fileReference(java.lang.Object);FileReferenceFactory
org.gradle.plugins.ide.eclipse.model.internal.ClasspathFactory.createOutput();EclipseClasspath
org.gradle.plugins.ide.eclipse.model.internal.ProjectDependencyBuilder.determineTargetProjectPath(org.gradle.plugins.ide.internal.resolver.model.IdeProjectDependency);IdeProjectDependency
org.gradle.plugins.ide.eclipse.model.internal.WtpComponentFactory.determineProjectName(org.gradle.plugins.ide.internal.resolver.model.IdeProjectDependency);IdeProjectDependency
org.gradle.plugins.ide.idea.model.IdeaWorkspace.mergeXmlWorkspace(org.gradle.plugins.ide.idea.model.Workspace);FileContentMerger
org.gradle.plugins.ide.idea.model.internal.ModuleDependencyBuilder.determineProjectName(org.gradle.plugins.ide.internal.resolver.model.IdeProjectDependency);IdeProjectDependency
org.gradle.plugins.ide.internal.tooling.IdeaModelBuilder.appendModule(java.util.Map<java.lang.String,org.gradle.plugins.ide.internal.tooling.idea.DefaultIdeaModule>, org.gradle.plugins.ide.idea.model.IdeaModule, org.gradle.plugins.ide.internal.tooling.idea.DefaultIdeaProject, org.gradle.tooling.internal.gradle.DefaultGradleProject);IdeaModule
org.gradle.plugins.ide.eclipse.model.internal.EclipseDependenciesCreator.createLibraryDependencies();EclipseClasspath
org.gradle.plugins.ide.idea.model.Project.storeJdk();Jdk
org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.writeDependencyExclude(org.gradle.api.artifacts.ExcludeRule, org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.OptionalAttributeXmlWriter);OptionalAttributeXmlWriter
org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.printDependencyArtifact(org.gradle.api.artifacts.DependencyArtifact, org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.OptionalAttributeXmlWriter);OptionalAttributeXmlWriter
org.gradle.api.publish.ivy.internal.publisher.ValidatingIvyPublisher.field(org.gradle.api.publish.ivy.internal.publisher.IvyNormalizedPublication, java.lang.String, java.lang.String);IvyNormalizedPublication
org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.writeConfigurations(org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.OptionalAttributeXmlWriter);OptionalAttributeXmlWriter
org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.writePublications(org.gradle.api.publish.ivy.internal.publisher.IvyDescriptorFileGenerator.OptionalAttributeXmlWriter);OptionalAttributeXmlWriter
org.gradle.testing.jacoco.plugins.JacocoPlugin.configureJacocoReportDefaults(org.gradle.testing.jacoco.plugins.JacocoPluginExtension, org.gradle.testing.jacoco.tasks.JacocoReport);JacocoPluginExtension
org.gradle.plugins.javascript.coffeescript.CoffeeScriptBasePlugin.addJsConfiguration(org.gradle.api.artifacts.ConfigurationContainer, org.gradle.api.artifacts.dsl.DependencyHandler, org.gradle.plugins.javascript.coffeescript.CoffeeScriptExtension);CoffeeScriptExtension
org.gradle.plugins.javascript.envjs.EnvJsPlugin.addConfiguration(org.gradle.api.artifacts.ConfigurationContainer, org.gradle.api.artifacts.dsl.DependencyHandler, org.gradle.plugins.javascript.envjs.EnvJsExtension);EnvJsExtension
org.gradle.plugins.javascript.jshint.JsHintPlugin.addConfiguration(org.gradle.api.artifacts.ConfigurationContainer, org.gradle.api.artifacts.dsl.DependencyHandler, org.gradle.plugins.javascript.jshint.JsHintExtension);JsHintExtension
org.gradle.plugins.javascript.rhino.RhinoPlugin.configureDefaultRhinoDependency(org.gradle.api.artifacts.Configuration, org.gradle.api.artifacts.dsl.DependencyHandler, org.gradle.plugins.javascript.rhino.RhinoExtension);RhinoExtension
