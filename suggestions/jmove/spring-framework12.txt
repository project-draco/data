Refactoring Type	Source Method	Target Class
Move Method	org.springframework.web.reactive.result.HandlerResultHandlerSupport::selectMediaType(ServerWebExchange, Supplier<List<MediaType>>):MediaType	org.springframework.web.reactive.accept.RequestedContentTypeResolver
Move Method	org.springframework.web.reactive.result.view.ViewResolutionResultHandler::renderWithextends Void> (View, Map<String,Object>, MediaType, ServerWebExchange, BindingContext):Mono<?	org.springframework.web.reactive.result.view.View
Move Method	org.springframework.web.reactive.resource.AppCacheManifestTransformer::processLine(LineInfo, ServerWebExchange, Resource, ResourceTransformerChain):Mono<String>	org.springframework.web.reactive.resource.ResourceTransformerChain
Move Method	org.springframework.web.reactive.result.condition.ProducesRequestCondition::getAcceptedMediaTypes(ServerWebExchange):List<MediaType>	org.springframework.web.reactive.accept.RequestedContentTypeResolver
Move Method	org.springframework.web.reactive.resource.VersionResourceResolver::resolveVersionedResource(ServerWebExchange, String, List<? extends Resource>, ResourceResolverChain):Mono<Resource>	org.springframework.web.reactive.resource.ResourceResolverChain
Move Method	org.springframework.web.reactive.function.client.DefaultWebClientTests::verifyAndGetRequest():ClientRequest	org.springframework.web.reactive.function.client.ExchangeFunction
Move Method	org.springframework.web.reactive.result.view.RequestContext::getModelObject(String):T	org.springframework.web.reactive.result.view.RequestDataValueProcessor
Move Method	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping::updateConsumesCondition(RequestMappingInfo, Method):void	org.springframework.web.reactive.result.method.RequestMappingInfo
Move Method	org.springframework.web.reactive.result.HandlerResultHandlerSupport::getAdapter(HandlerResult):ReactiveAdapter	org.springframework.web.reactive.HandlerResult
Move Method	org.springframework.web.reactive.result.method.annotation.HttpEntityMethodArgumentResolverTests::createResolver():HttpEntityMethodArgumentResolver	org.springframework.web.reactive.result.method.annotation.HttpEntityMethodArgumentResolver
Move Method	org.springframework.web.reactive.function.server.LocaleContextResolverIntegrationTests::fixedLocale(HttpServer):void	org.springframework.web.reactive.function.client.WebClient
Move Method	org.springframework.web.reactive.socket.client.StandardWebSocketClient::createWebSocketSession(Session, HandshakeInfo, MonoProcessor<Void>):StandardWebSocketSession	org.springframework.web.reactive.socket.HandshakeInfo
Move Method	org.springframework.web.reactive.result.method.annotation.ModelAttributeMethodArgumentResolver::constructAttribute(Constructor<?>, String, BindingContext, ServerWebExchange):Mono<?>	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver::validate(Object, Object[], MethodParameter, BindingContext, ServerWebExchange):void	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.resource.ResourceTransformerSupport::toAbsolutePath(String, ServerWebExchange):String	org.springframework.web.reactive.resource.ResourceUrlProvider
Move Method	org.springframework.web.reactive.result.method.RequestMappingInfo::getCustomCondition():RequestCondition<?>	org.springframework.web.reactive.result.condition.RequestConditionHolder
Move Method	org.springframework.web.reactive.result.view.ViewResolutionResultHandler::updateBindingResult(BindingContext, ServerWebExchange):void	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.result.method.annotation.ModelInitializer::invokeModelAttributeMethods(BindingContext, List<InvocableHandlerMethod>, ServerWebExchange):Mono<Void>	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.function.server.RenderingResponseIntegrationTests.RenderingResponseHandler::render(ServerRequest):Mono<RenderingResponse>	org.springframework.web.reactive.function.server.ServerRequest
Move Method	org.springframework.web.reactive.resource.ResourceTransformerSupport::resolveUrlPath(String, ServerWebExchange, Resource, ResourceTransformerChain):Mono<String>	org.springframework.web.reactive.resource.ResourceTransformerChain
Move Method	org.springframework.web.reactive.result.method.annotation.ModelInitializer::initModel(HandlerMethod, InitBinderBindingContext, ServerWebExchange):Mono<Void>	org.springframework.web.reactive.result.method.annotation.InitBinderBindingContext
Move Method	org.springframework.web.reactive.result.view.UrlBasedViewResolverTests::setup():void	org.springframework.web.reactive.result.view.UrlBasedViewResolver
Move Method	org.springframework.web.reactive.result.method.annotation.RequestBodyMethodArgumentResolverTests::handle(String, Mono<String>, Flux<String>, Single<String>, io.reactivex.Single<String>, Maybe<String>, Observable<String>, io.reactivex.Observable<String>, CompletableFuture<String>, String, Mono<String>, Flux<String>, Single<String>, io.reactivex.Single<String>, Maybe<String>, Observable<String>, io.reactivex.Observable<String>, CompletableFuture<String>, Map<?,?>, String):void	org.springframework.web.reactive.result.method.annotation.RequestBodyMethodArgumentResolver
Move Method	org.springframework.web.reactive.function.server.support.RouterFunctionMapping::setAttributes(Map<String,Object>, ServerRequest, HandlerFunction<?>):void	org.springframework.web.reactive.function.server.HandlerFunction
Move Method	org.springframework.web.reactive.result.method.annotation.RequestPartMethodArgumentResolver::decodePartValues(Flux<Part>, MethodParameter, BindingContext, ServerWebExchange, boolean):Flux<?>	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.socket.adapter.AbstractListenerWebSocketSession::handleMessage(Type, WebSocketMessage):void	org.springframework.web.reactive.socket.WebSocketMessage
Move Method	org.springframework.web.reactive.result.view.LocaleContextResolverIntegrationTests::fixedLocale(HttpServer):void	org.springframework.web.reactive.function.client.WebClient
Move Method	org.springframework.web.reactive.result.method.annotation.ModelInitializer::handleResult(HandlerResult, BindingContext):Mono<Void>	org.springframework.web.reactive.HandlerResult
Move Method	org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService::createHandshakeInfo(ServerWebExchange, ServerHttpRequest, String, Map<String,Object>):HandshakeInfo	org.springframework.web.reactive.socket.server.RequestUpgradeStrategy
Move Method	org.springframework.web.reactive.config.DelegatingWebFluxConfiguration::setConfigurers(List<WebFluxConfigurer>):void	org.springframework.web.reactive.config.WebFluxConfigurerComposite
Move Method	org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService::handleBadRequest(ServerWebExchange, String):Mono<Void>	org.springframework.web.reactive.socket.server.RequestUpgradeStrategy
Move Method	org.springframework.web.reactive.result.method.annotation.ModelAttributeMethodArgumentResolverTests::postForm(String):ServerWebExchange	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter::handleException(Throwable, HandlerMethod, BindingContext, ServerWebExchange):Mono<HandlerResult>	org.springframework.web.reactive.result.method.annotation.ModelInitializer
Move Method	org.springframework.web.reactive.handler.SimpleUrlHandlerMappingTests::testUrl(String, Object, HandlerMapping, String):void	org.springframework.web.reactive.HandlerMapping
Move Method	org.springframework.web.reactive.result.method.annotation.RequestPartMethodArgumentResolverTests::handle(Person, Mono<Person>, Flux<Person>, List<Person>, Part, Mono<Part>, Flux<Part>, List<Part>, Person, Mono<Person>, Flux<Person>, List<Person>, Part, Mono<Part>, Flux<Part>, List<Part>, Person):void	org.springframework.web.reactive.result.method.annotation.RequestPartMethodArgumentResolver
Move Method	org.springframework.web.reactive.function.server.support.DispatcherHandlerIntegrationTests.Handler::handle(ServerRequest):Mono<ServerResponse>	org.springframework.web.reactive.function.server.ServerRequest
Move Method	org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver::readBody(MethodParameter, boolean, BindingContext, ServerWebExchange):Mono<Object>	org.springframework.web.reactive.BindingContext
Move Method	org.springframework.web.reactive.resource.AppCacheManifestTransformer::transformextends Resource> (String, Resource, ResourceTransformerChain, ServerWebExchange):Mono<?	org.springframework.web.reactive.resource.ResourceTransformerChain
Move Method	org.springframework.web.reactive.result.method.annotation.ModelInitializer::findModelAttributes(HandlerMethod, SessionAttributesHandler):List<String>	org.springframework.web.reactive.result.method.annotation.SessionAttributesHandler
Move Method	org.springframework.web.reactive.resource.ResourceWebHandler::getResource(ServerWebExchange):Mono<Resource>	org.springframework.web.reactive.resource.ResourceResolverChain
Move Method	org.springframework.web.reactive.resource.ResourceWebHandler::setHeaders(ServerWebExchange, Resource, MediaType):void	org.springframework.web.reactive.resource.ResourceTransformerChain
Move Method	org.springframework.web.reactive.function.server.LocaleContextResolverIntegrationTests::render(ServerRequest):Mono<RenderingResponse>	org.springframework.web.reactive.function.server.ServerRequest
Move Method	org.springframework.web.reactive.resource.CssLinkResourceTransformer::transformContentextends Resource> (String, Resource, ResourceTransformerChain, ServerWebExchange):Mono<?	org.springframework.web.reactive.resource.ResourceTransformerChain
Move Method	org.springframework.web.reactive.result.method.InvocableHandlerMethod::getMethodArgumentValues(ServerWebExchange, BindingContext, Object[]):Mono<Object[]>	org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverComposite
Move Method	org.springframework.web.reactive.function.server.ToStringVisitorTests::testPredicate(RequestPredicate, String):void	org.springframework.web.reactive.function.server.RequestPredicate
