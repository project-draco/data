hex.FrameSplitter.makeTemplates(water.fvec.Frame, float[]);Frame
hex.gbm.DTree.TreeJCodeGen.closure(water.util.SB);SB
water.H2ONode.record_task_answer(water.RPC.RPCCall);RPCCall
water.api.TutorialWorkflow.decorateActiveStep(water.api.TutorialWorkflow.TutorStep, java.lang.StringBuilder);TutorStep
hex.gbm.DTree.TreeJCodeGen.preamble(water.util.SB, int);SB
hex.glm.LSMSolver.grad(hex.gram.Gram, double[], double[]);Gram
hex.singlenoderf.DABuilder.getRowCount(water.fvec.Frame);Frame
hex.singlenoderf.DABuilder.getChunkId(water.fvec.Frame);Frame
hex.singlenoderf.SpeeDRF.DRFTask.howManyRPC(water.fvec.Frame);Frame
water.api.Inspect2.infoLink(water.Key);Key
water.ga.GoogleAnalytics.getDefaultMaxPerRoute(water.ga.GoogleAnalyticsConfig);GoogleAnalyticsConfig
water.ga.GoogleAnalytics.gatherStats(water.ga.GoogleAnalyticsRequest);GoogleAnalyticsStats
water.ga.GoogleAnalytics.createHttpClient(water.ga.GoogleAnalyticsConfig);GoogleAnalyticsConfig
hex.glm.GLM2.computeIntercept(hex.FrameTask.DataInfo, double, water.fvec.Vec, water.fvec.Vec);DataInfo
hex.la.Matrix.mult(water.fvec.Frame);Frame
hex.singlenoderf.Data.filterVal3(int[], hex.singlenoderf.Statistic, int, int);Statistic
hex.singlenoderf.Statistic.isColumnUsable(hex.singlenoderf.Data, int);Data
water.Model.score(water.fvec.Frame, boolean, int);Frame
hex.Layer.momentum(long);NeuralNet
hex.Summary2.add(water.fvec.Chunk);Chunk
hex.la.Matrix.outerProd();Frame
hex.la.Matrix.trans();Frame
jsr166y.ForkJoinPool.runWorker(jsr166y.ForkJoinPool.WorkQueue);WorkQueue
hex.Layer.rate(long);NeuralNet
hex.Quantiles.add(water.fvec.Chunk);Chunk
hex.deeplearning.Neurons.rate(long);DeepLearning
hex.gbm.DTree.DecidedNode.pred(int);Split
hex.singlenoderf.SpeeDRFModel.colMap(water.fvec.Frame);Frame
jsr166y.ForkJoinPool.helpJoinOnce(jsr166y.ForkJoinPool.WorkQueue, jsr166y.ForkJoinTask<?>);WorkQueue
water.Job.ColumnsJob.selectFrame(water.fvec.Frame);Frame
water.fvec.FrameCreator.FrameRandomizer.setSeed(java.util.Random, int, long);CreateFrame
water.fvec.ParseDataset2.MultiFileParseTask.streamParse(java.io.InputStream, water.parser.CustomParser.ParserSetup, water.fvec.ParseDataset2.FVecDataOut, water.fvec.ParseDataset2.ParseProgressMonitor);ParserSetup
water.fvec.Vec.Writer.close();Vec
water.nbhm.NonBlockingSetInt.writeObject(java.io.ObjectOutputStream);NBSI
water.serial.BinarySerializer.saveHeader(T, water.AutoBuffer);AutoBuffer
water.serial.BinarySerializer.loadHeader(water.AutoBuffer);AutoBuffer
hex.deeplearning.Neurons.Input.setInput(long, double[]);DataInfo
water.Model.calcError(water.fvec.Frame, water.fvec.Vec, water.fvec.Frame, water.fvec.Frame, java.lang.String, boolean, int, water.api.ConfusionMatrix, water.api.AUC, water.api.HitRatio);ConfusionMatrix
hex.gbm.DTree.TreeModel.generateHTMLTreeStats(java.lang.StringBuilder);TreeStats
hex.glm.GLMModelView.val2HTML(hex.glm.GLMModel.Submodel, hex.glm.GLMValidation, java.lang.StringBuilder);GLMValidation
water.fvec.NewChunk.Value.add2Chunk(water.fvec.NewChunk);NewChunk
water.Model.toJavaDOMAINS(water.util.SB, water.util.SB);SB
hex.FrameExtractor.makeTemplates();Frame
hex.singlenoderf.SpeeDRF.DRFTask.canLoadAll(water.fvec.Frame, hex.singlenoderf.SpeeDRF.DRFTask.ChunkAllocInfo);Frame
water.exec.Env.addRef(water.fvec.Vec);Vec
hex.deeplearning.DeepLearning.reBalance(water.fvec.Frame, boolean);Frame
hex.deeplearning.Neurons.compute_sparsity();DenseVector
hex.deeplearning.Neurons.momentum(long);DeepLearning
hex.gbm.DTree.DecidedNode.bin(water.fvec.Chunk[], int);Split
hex.gbm.SharedTreeModelBuilder.ScoreBuildHistogram.score_decide(water.fvec.Chunk[], water.fvec.Chunk, water.fvec.Chunk, water.fvec.Chunk, int[]);Chunk
water.Model.toJavaSuper(water.util.SB);SB
water.api.TutorialWorkflow.decorateWorkflow(water.api.TutorialWorkflow.TutorWorkflow, java.lang.StringBuilder, int);TutorWorkflow
